{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Project explore"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Import libraries\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "import scipy as sp"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "data_path=\"ml_project1_data.xlsx\"\n",
    "\n",
    "df=pd.read_excel(data_path, index_col=0)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Split Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.model_selection import train_test_split \n",
    "seed = 0\n",
    "test_size = 0.2\n",
    "x_train, x_test, y_train, y_test = train_test_split(df.drop(columns = ['Response']), df['Response'], test_size=test_size, random_state=seed, stratify = df['Response'])\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Nr. obs:\t1792\t==> 80.00% of Data\n",
      "Test Nr. obs:\t448\t==> 20.00% of Data\n"
     ]
    }
   ],
   "source": [
    "df = pd.concat([x_train,y_train], axis = 1)\n",
    "\n",
    "# export to csv test partition\n",
    "\n",
    "df_test = pd.concat([x_test, y_test], axis = 1)\n",
    "df_test.to_excel(\"df_TEST.xlsx\")\n",
    "\n",
    "print('Train Nr. obs:\\t{}\\t==> {:.2%} of Data'.format(df.shape[0],df.shape[0]/2240))\n",
    "print('Test Nr. obs:\\t{}\\t==> {:.2%} of Data'.format(df_test.shape[0],df_test.shape[0]/2240))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Explore"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Data in right Format\n",
    "\n",
    "df['Dt_Customer'] = pd.to_datetime(df['Dt_Customer'])\n",
    "\n",
    "# test\n",
    "\n",
    "df_test['Dt_Customer'] = pd.to_datetime(df_test['Dt_Customer'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Year_Birth</th>\n",
       "      <th>Education</th>\n",
       "      <th>Marital_Status</th>\n",
       "      <th>Income</th>\n",
       "      <th>Kidhome</th>\n",
       "      <th>Teenhome</th>\n",
       "      <th>Dt_Customer</th>\n",
       "      <th>Recency</th>\n",
       "      <th>MntWines</th>\n",
       "      <th>MntFruits</th>\n",
       "      <th>...</th>\n",
       "      <th>NumWebVisitsMonth</th>\n",
       "      <th>AcceptedCmp3</th>\n",
       "      <th>AcceptedCmp4</th>\n",
       "      <th>AcceptedCmp5</th>\n",
       "      <th>AcceptedCmp1</th>\n",
       "      <th>AcceptedCmp2</th>\n",
       "      <th>Complain</th>\n",
       "      <th>Z_CostContact</th>\n",
       "      <th>Z_Revenue</th>\n",
       "      <th>Response</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ID</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>67</th>\n",
       "      <td>1972</td>\n",
       "      <td>Master</td>\n",
       "      <td>Single</td>\n",
       "      <td>46423.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2013-09-18</td>\n",
       "      <td>6</td>\n",
       "      <td>68</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>11</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3828</th>\n",
       "      <td>1951</td>\n",
       "      <td>Graduation</td>\n",
       "      <td>Married</td>\n",
       "      <td>71107.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2013-02-17</td>\n",
       "      <td>61</td>\n",
       "      <td>533</td>\n",
       "      <td>10</td>\n",
       "      <td>...</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>11</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3409</th>\n",
       "      <td>1984</td>\n",
       "      <td>Graduation</td>\n",
       "      <td>Single</td>\n",
       "      <td>36108.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2013-10-15</td>\n",
       "      <td>68</td>\n",
       "      <td>141</td>\n",
       "      <td>8</td>\n",
       "      <td>...</td>\n",
       "      <td>9</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>11</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3 rows Ã— 28 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      Year_Birth   Education Marital_Status   Income  Kidhome  Teenhome  \\\n",
       "ID                                                                        \n",
       "67          1972      Master         Single  46423.0        1         1   \n",
       "3828        1951  Graduation        Married  71107.0        0         1   \n",
       "3409        1984  Graduation         Single  36108.0        1         0   \n",
       "\n",
       "     Dt_Customer  Recency  MntWines  MntFruits    ...     NumWebVisitsMonth  \\\n",
       "ID                                                ...                         \n",
       "67    2013-09-18        6        68          0    ...                     7   \n",
       "3828  2013-02-17       61       533         10    ...                     4   \n",
       "3409  2013-10-15       68       141          8    ...                     9   \n",
       "\n",
       "      AcceptedCmp3  AcceptedCmp4  AcceptedCmp5  AcceptedCmp1  AcceptedCmp2  \\\n",
       "ID                                                                           \n",
       "67               0             0             0             0             0   \n",
       "3828             0             0             0             0             0   \n",
       "3409             1             0             0             0             0   \n",
       "\n",
       "      Complain  Z_CostContact  Z_Revenue  Response  \n",
       "ID                                                  \n",
       "67           0              3         11         0  \n",
       "3828         0              3         11         0  \n",
       "3409         0              3         11         0  \n",
       "\n",
       "[3 rows x 28 columns]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 1792 entries, 67 to 8026\n",
      "Data columns (total 28 columns):\n",
      "Year_Birth             1792 non-null int64\n",
      "Education              1792 non-null object\n",
      "Marital_Status         1792 non-null object\n",
      "Income                 1772 non-null float64\n",
      "Kidhome                1792 non-null int64\n",
      "Teenhome               1792 non-null int64\n",
      "Dt_Customer            1792 non-null datetime64[ns]\n",
      "Recency                1792 non-null int64\n",
      "MntWines               1792 non-null int64\n",
      "MntFruits              1792 non-null int64\n",
      "MntMeatProducts        1792 non-null int64\n",
      "MntFishProducts        1792 non-null int64\n",
      "MntSweetProducts       1792 non-null int64\n",
      "MntGoldProds           1792 non-null int64\n",
      "NumDealsPurchases      1792 non-null int64\n",
      "NumWebPurchases        1792 non-null int64\n",
      "NumCatalogPurchases    1792 non-null int64\n",
      "NumStorePurchases      1792 non-null int64\n",
      "NumWebVisitsMonth      1792 non-null int64\n",
      "AcceptedCmp3           1792 non-null int64\n",
      "AcceptedCmp4           1792 non-null int64\n",
      "AcceptedCmp5           1792 non-null int64\n",
      "AcceptedCmp1           1792 non-null int64\n",
      "AcceptedCmp2           1792 non-null int64\n",
      "Complain               1792 non-null int64\n",
      "Z_CostContact          1792 non-null int64\n",
      "Z_Revenue              1792 non-null int64\n",
      "Response               1792 non-null int64\n",
      "dtypes: datetime64[ns](1), float64(1), int64(24), object(2)\n",
      "memory usage: 406.0+ KB\n",
      "None \n",
      "Response rate: 14.9%\n"
     ]
    }
   ],
   "source": [
    "display(df.head(3))\n",
    "print(df.info(), \"\\nResponse rate: {}%\".format(round(100*df[\"Response\"].mean(), 2)))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Response rate is 15 %"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ">>> 1792 Observations\n"
     ]
    }
   ],
   "source": [
    "# Get dataset size saved\n",
    "\n",
    "df_original_size = len(df)\n",
    "print (\">>>\",df_original_size,\"Observations\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Missing values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "# function that returns number of missings, percentage of missings and if it is above or below 3% threshold\n",
    "\n",
    "def missing_values_reporter(df):    \n",
    "    na_count = df.isna().sum() \n",
    "    ser = na_count[na_count > 0]\n",
    "    ser_p = np.round(ser.divide(df.shape[0])*100,2)\n",
    "    tmp = pd.DataFrame({\"N missings\": ser,\"% missings\": ser_p,\"Above Threshold (3%)\": False})\n",
    "    tmp.loc[tmp[\"% missings\"] > 3., 'Above Threshold (3%)'] = 'True' \n",
    "    return tmp"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>N missings</th>\n",
       "      <th>% missings</th>\n",
       "      <th>Above Threshold (3%)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Income</th>\n",
       "      <td>20</td>\n",
       "      <td>1.12</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        N missings  % missings  Above Threshold (3%)\n",
       "Income          20        1.12                 False"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_miss=missing_values_reporter(df)\n",
    "df_miss"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# cutoff is in percentage\n",
    "\n",
    "cutoff_ = 3\n",
    "\n",
    "cutoff_list = [cutoff_, cutoff_]\n",
    "#plt.figure(figsize=(15,5))\n",
    "ax = df_miss.sort_values('% missings', ascending=False).plot.bar(y=\"% missings\", \n",
    "                                                                 color=\"Grey\",\n",
    "                                                                 alpha = 0.9,\n",
    "                                                                 title=\"{}% cutoff line on missing values\".format(cutoff_),\n",
    "                                                                 legend=False)\n",
    "ax.set_xlabel(\"Features with missing values\", size=12)\n",
    "ax.set_ylabel(\"Proportion of missings\")\n",
    "ax.plot([-1, len(df_miss.index)], cutoff_list,'r--', lw=2)\n",
    "ax.set_xticklabels(df_miss.index, rotation=60, size=9)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "# delete missing values (automate process..)\n",
    "\n",
    "df.dropna(inplace=True)\n",
    "\n",
    "# test\n",
    "#df_test.dropna(inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(1772, 28)"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Describe categorical features"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Education</th>\n",
       "      <th>Marital_Status</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>1772</td>\n",
       "      <td>1772</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>unique</th>\n",
       "      <td>5</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>top</th>\n",
       "      <td>Graduation</td>\n",
       "      <td>Married</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>freq</th>\n",
       "      <td>895</td>\n",
       "      <td>686</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         Education Marital_Status\n",
       "count         1772           1772\n",
       "unique           5              8\n",
       "top     Graduation        Married\n",
       "freq           895            686"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe(include=[\"object\", \"category\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "def describe_cat(df, list_cfeatures, target):\n",
    "    cat_list = []\n",
    "    for feature in df[list_cfeatures]:    \n",
    "        cat_list.append(df.groupby([feature]).agg({target: ['count', \"mean\"]}))\n",
    "    return pd.concat(cat_list, axis=0, keys=list_cfeatures)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th colspan=\"2\" halign=\"left\">Response</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th rowspan=\"5\" valign=\"top\">Education</th>\n",
       "      <th>2n Cycle</th>\n",
       "      <td>152</td>\n",
       "      <td>0.098684</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Basic</th>\n",
       "      <td>48</td>\n",
       "      <td>0.041667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Graduation</th>\n",
       "      <td>895</td>\n",
       "      <td>0.140782</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Master</th>\n",
       "      <td>296</td>\n",
       "      <td>0.155405</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>PhD</th>\n",
       "      <td>381</td>\n",
       "      <td>0.202100</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"8\" valign=\"top\">Marital_Status</th>\n",
       "      <th>Absurd</th>\n",
       "      <td>2</td>\n",
       "      <td>0.500000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Alone</th>\n",
       "      <td>2</td>\n",
       "      <td>0.500000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Divorced</th>\n",
       "      <td>183</td>\n",
       "      <td>0.224044</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Married</th>\n",
       "      <td>686</td>\n",
       "      <td>0.102041</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Single</th>\n",
       "      <td>377</td>\n",
       "      <td>0.230769</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Together</th>\n",
       "      <td>454</td>\n",
       "      <td>0.110132</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Widow</th>\n",
       "      <td>66</td>\n",
       "      <td>0.227273</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>YOLO</th>\n",
       "      <td>2</td>\n",
       "      <td>0.500000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                          Response          \n",
       "                             count      mean\n",
       "Education      2n Cycle        152  0.098684\n",
       "               Basic            48  0.041667\n",
       "               Graduation      895  0.140782\n",
       "               Master          296  0.155405\n",
       "               PhD             381  0.202100\n",
       "Marital_Status Absurd            2  0.500000\n",
       "               Alone             2  0.500000\n",
       "               Divorced        183  0.224044\n",
       "               Married         686  0.102041\n",
       "               Single          377  0.230769\n",
       "               Together        454  0.110132\n",
       "               Widow            66  0.227273\n",
       "               YOLO              2  0.500000"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_cat=describe_cat(df, df.select_dtypes(include=[\"object\", \"category\"]).columns, \"Response\")\n",
    "df_cat"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# !!!!!!!!!!!!!\n",
    "# Missings nas categoricas"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [],
   "source": [
    "# remove unwanted categories\n",
    "\n",
    "education_cat = ['2n Cycle','Basic','Graduation','Master','PhD']\n",
    "marital_cat = ['Divorced','Divorced','Married','Single','Together','Widow']\n",
    "\n",
    "df = df[df['Education'].isin(education_cat)]\n",
    "df = df[df['Marital_Status'].isin(marital_cat)]\n",
    "\n",
    "# test\n",
    "\n",
    "#df_test = df_test[df_test['Education'].isin(education_cat)]\n",
    "#df_test = df_test[df_test['Marital_Status'].isin(marital_cat)]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th colspan=\"2\" halign=\"left\">Response</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th rowspan=\"5\" valign=\"top\">Education</th>\n",
       "      <th>2n Cycle</th>\n",
       "      <td>152</td>\n",
       "      <td>0.098684</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Basic</th>\n",
       "      <td>48</td>\n",
       "      <td>0.041667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Graduation</th>\n",
       "      <td>894</td>\n",
       "      <td>0.139821</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Master</th>\n",
       "      <td>294</td>\n",
       "      <td>0.156463</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>PhD</th>\n",
       "      <td>378</td>\n",
       "      <td>0.198413</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"5\" valign=\"top\">Marital_Status</th>\n",
       "      <th>Divorced</th>\n",
       "      <td>183</td>\n",
       "      <td>0.224044</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Married</th>\n",
       "      <td>686</td>\n",
       "      <td>0.102041</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Single</th>\n",
       "      <td>377</td>\n",
       "      <td>0.230769</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Together</th>\n",
       "      <td>454</td>\n",
       "      <td>0.110132</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Widow</th>\n",
       "      <td>66</td>\n",
       "      <td>0.227273</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                          Response          \n",
       "                             count      mean\n",
       "Education      2n Cycle        152  0.098684\n",
       "               Basic            48  0.041667\n",
       "               Graduation      894  0.139821\n",
       "               Master          294  0.156463\n",
       "               PhD             378  0.198413\n",
       "Marital_Status Divorced        183  0.224044\n",
       "               Married         686  0.102041\n",
       "               Single          377  0.230769\n",
       "               Together        454  0.110132\n",
       "               Widow            66  0.227273"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_cat=describe_cat(df, df.select_dtypes(include=[\"object\", \"category\"]).columns, \"Response\")\n",
    "df_cat"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [],
   "source": [
    "import matplotlib.ticker as mtick\n",
    "def categorical_discrimination_plot(df, list_cfeatures, target):\n",
    "    rm_df_cat = describe_cat(df, list_cfeatures, target)\n",
    "\n",
    "    cutoff_ = df[target].mean()\n",
    "    cutoff_list = [cutoff_, cutoff_]\n",
    "    \n",
    "    for feature in list_cfeatures:\n",
    "        df_cat=rm_df_cat.iloc[:, 1][feature].sort_values(ascending=False)\n",
    "        color_t = ['grey' if x > cutoff_ else 'lightgrey' for x in df_cat]\n",
    "        plt.figure(figsize=(15,5))\n",
    "        ax = df_cat.plot.bar(color=color_t,\n",
    "                             alpha = 0.9,\n",
    "                             title=\"{}% cutoff line on discrimination ability\".format(round(cutoff_*100, 2)),\n",
    "                             legend=False)\n",
    "        ax.set_xticklabels(df_cat.index, rotation=60, size=9)  \n",
    "        ax.yaxis.set_major_formatter(mtick.PercentFormatter(1.0))\n",
    "        ax.set_ylabel(\"Proportion of respondents\")\n",
    "        ax.set_xlabel(feature)\n",
    "        ax.plot([-1, len(df_cat)], cutoff_list,'r--', lw=2.5, color='firebrick')\n",
    "        plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x360 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x360 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "categorical_discrimination_plot(df, df.select_dtypes(include=[\"object\", \"category\"]).columns, \"Response\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Describe numerical features"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Year_Birth</th>\n",
       "      <th>Income</th>\n",
       "      <th>Kidhome</th>\n",
       "      <th>Teenhome</th>\n",
       "      <th>Recency</th>\n",
       "      <th>MntWines</th>\n",
       "      <th>MntFruits</th>\n",
       "      <th>MntMeatProducts</th>\n",
       "      <th>MntFishProducts</th>\n",
       "      <th>MntSweetProducts</th>\n",
       "      <th>...</th>\n",
       "      <th>NumWebVisitsMonth</th>\n",
       "      <th>AcceptedCmp3</th>\n",
       "      <th>AcceptedCmp4</th>\n",
       "      <th>AcceptedCmp5</th>\n",
       "      <th>AcceptedCmp1</th>\n",
       "      <th>AcceptedCmp2</th>\n",
       "      <th>Complain</th>\n",
       "      <th>Z_CostContact</th>\n",
       "      <th>Z_Revenue</th>\n",
       "      <th>Response</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>1766.000000</td>\n",
       "      <td>1766.000000</td>\n",
       "      <td>1766.000000</td>\n",
       "      <td>1766.000000</td>\n",
       "      <td>1766.000000</td>\n",
       "      <td>1766.000000</td>\n",
       "      <td>1766.000000</td>\n",
       "      <td>1766.000000</td>\n",
       "      <td>1766.000000</td>\n",
       "      <td>1766.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>1766.000000</td>\n",
       "      <td>1766.000000</td>\n",
       "      <td>1766.000000</td>\n",
       "      <td>1766.000000</td>\n",
       "      <td>1766.000000</td>\n",
       "      <td>1766.000000</td>\n",
       "      <td>1766.000000</td>\n",
       "      <td>1766.0</td>\n",
       "      <td>1766.0</td>\n",
       "      <td>1766.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>1968.855040</td>\n",
       "      <td>51610.984711</td>\n",
       "      <td>0.441676</td>\n",
       "      <td>0.506795</td>\n",
       "      <td>48.771234</td>\n",
       "      <td>299.983579</td>\n",
       "      <td>25.944507</td>\n",
       "      <td>166.294451</td>\n",
       "      <td>36.650623</td>\n",
       "      <td>26.574745</td>\n",
       "      <td>...</td>\n",
       "      <td>5.343148</td>\n",
       "      <td>0.070781</td>\n",
       "      <td>0.070215</td>\n",
       "      <td>0.071348</td>\n",
       "      <td>0.061721</td>\n",
       "      <td>0.013590</td>\n",
       "      <td>0.008494</td>\n",
       "      <td>3.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>0.148924</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>11.848976</td>\n",
       "      <td>21773.344045</td>\n",
       "      <td>0.531976</td>\n",
       "      <td>0.542483</td>\n",
       "      <td>29.027208</td>\n",
       "      <td>334.011895</td>\n",
       "      <td>39.598685</td>\n",
       "      <td>226.885089</td>\n",
       "      <td>53.410598</td>\n",
       "      <td>40.771926</td>\n",
       "      <td>...</td>\n",
       "      <td>2.398778</td>\n",
       "      <td>0.256532</td>\n",
       "      <td>0.255582</td>\n",
       "      <td>0.257478</td>\n",
       "      <td>0.240717</td>\n",
       "      <td>0.115814</td>\n",
       "      <td>0.091795</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.356115</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>1899.000000</td>\n",
       "      <td>1730.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>3.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20%</th>\n",
       "      <td>1957.000000</td>\n",
       "      <td>31761.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>19.000000</td>\n",
       "      <td>15.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>11.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>3.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40%</th>\n",
       "      <td>1967.000000</td>\n",
       "      <td>44159.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>38.000000</td>\n",
       "      <td>79.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>34.000000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>3.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>1970.000000</td>\n",
       "      <td>51038.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>49.000000</td>\n",
       "      <td>171.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>67.000000</td>\n",
       "      <td>12.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>6.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>3.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>60.0%</th>\n",
       "      <td>1973.000000</td>\n",
       "      <td>57957.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>58.000000</td>\n",
       "      <td>277.000000</td>\n",
       "      <td>14.000000</td>\n",
       "      <td>108.000000</td>\n",
       "      <td>20.000000</td>\n",
       "      <td>14.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>6.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>3.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>80%</th>\n",
       "      <td>1979.000000</td>\n",
       "      <td>71391.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>79.000000</td>\n",
       "      <td>577.000000</td>\n",
       "      <td>43.000000</td>\n",
       "      <td>292.000000</td>\n",
       "      <td>65.000000</td>\n",
       "      <td>44.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>3.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>1996.000000</td>\n",
       "      <td>162397.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>99.000000</td>\n",
       "      <td>1493.000000</td>\n",
       "      <td>199.000000</td>\n",
       "      <td>1725.000000</td>\n",
       "      <td>259.000000</td>\n",
       "      <td>262.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>20.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>3.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>10 rows Ã— 25 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        Year_Birth         Income      Kidhome     Teenhome      Recency  \\\n",
       "count  1766.000000    1766.000000  1766.000000  1766.000000  1766.000000   \n",
       "mean   1968.855040   51610.984711     0.441676     0.506795    48.771234   \n",
       "std      11.848976   21773.344045     0.531976     0.542483    29.027208   \n",
       "min    1899.000000    1730.000000     0.000000     0.000000     0.000000   \n",
       "20%    1957.000000   31761.000000     0.000000     0.000000    19.000000   \n",
       "40%    1967.000000   44159.000000     0.000000     0.000000    38.000000   \n",
       "50%    1970.000000   51038.000000     0.000000     0.000000    49.000000   \n",
       "60.0%  1973.000000   57957.000000     1.000000     1.000000    58.000000   \n",
       "80%    1979.000000   71391.000000     1.000000     1.000000    79.000000   \n",
       "max    1996.000000  162397.000000     2.000000     2.000000    99.000000   \n",
       "\n",
       "          MntWines    MntFruits  MntMeatProducts  MntFishProducts  \\\n",
       "count  1766.000000  1766.000000      1766.000000      1766.000000   \n",
       "mean    299.983579    25.944507       166.294451        36.650623   \n",
       "std     334.011895    39.598685       226.885089        53.410598   \n",
       "min       0.000000     0.000000         0.000000         0.000000   \n",
       "20%      15.000000     1.000000        11.000000         2.000000   \n",
       "40%      79.000000     4.000000        34.000000         7.000000   \n",
       "50%     171.000000     8.000000        67.000000        12.000000   \n",
       "60.0%   277.000000    14.000000       108.000000        20.000000   \n",
       "80%     577.000000    43.000000       292.000000        65.000000   \n",
       "max    1493.000000   199.000000      1725.000000       259.000000   \n",
       "\n",
       "       MntSweetProducts     ...       NumWebVisitsMonth  AcceptedCmp3  \\\n",
       "count       1766.000000     ...             1766.000000   1766.000000   \n",
       "mean          26.574745     ...                5.343148      0.070781   \n",
       "std           40.771926     ...                2.398778      0.256532   \n",
       "min            0.000000     ...                0.000000      0.000000   \n",
       "20%            1.000000     ...                3.000000      0.000000   \n",
       "40%            5.000000     ...                5.000000      0.000000   \n",
       "50%            8.000000     ...                6.000000      0.000000   \n",
       "60.0%         14.000000     ...                6.000000      0.000000   \n",
       "80%           44.000000     ...                7.000000      0.000000   \n",
       "max          262.000000     ...               20.000000      1.000000   \n",
       "\n",
       "       AcceptedCmp4  AcceptedCmp5  AcceptedCmp1  AcceptedCmp2     Complain  \\\n",
       "count   1766.000000   1766.000000   1766.000000   1766.000000  1766.000000   \n",
       "mean       0.070215      0.071348      0.061721      0.013590     0.008494   \n",
       "std        0.255582      0.257478      0.240717      0.115814     0.091795   \n",
       "min        0.000000      0.000000      0.000000      0.000000     0.000000   \n",
       "20%        0.000000      0.000000      0.000000      0.000000     0.000000   \n",
       "40%        0.000000      0.000000      0.000000      0.000000     0.000000   \n",
       "50%        0.000000      0.000000      0.000000      0.000000     0.000000   \n",
       "60.0%      0.000000      0.000000      0.000000      0.000000     0.000000   \n",
       "80%        0.000000      0.000000      0.000000      0.000000     0.000000   \n",
       "max        1.000000      1.000000      1.000000      1.000000     1.000000   \n",
       "\n",
       "       Z_CostContact  Z_Revenue     Response  \n",
       "count         1766.0     1766.0  1766.000000  \n",
       "mean             3.0       11.0     0.148924  \n",
       "std              0.0        0.0     0.356115  \n",
       "min              3.0       11.0     0.000000  \n",
       "20%              3.0       11.0     0.000000  \n",
       "40%              3.0       11.0     0.000000  \n",
       "50%              3.0       11.0     0.000000  \n",
       "60.0%            3.0       11.0     0.000000  \n",
       "80%              3.0       11.0     0.000000  \n",
       "max              3.0       11.0     1.000000  \n",
       "\n",
       "[10 rows x 25 columns]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "describe_num=df.describe(percentiles=np.arange(0.2, .8, .2))\n",
    "display(describe_num)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [],
   "source": [
    "# remove useless columns -> Variance equal to zero"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Columns with zero or almost zero variance to be removed:\n",
      " ['Z_CostContact', 'Z_Revenue']\n"
     ]
    }
   ],
   "source": [
    "const=describe_num.columns[describe_num.loc[\"std\"]<0.01]\n",
    "print(\"Columns with zero or almost zero variance to be removed:\\n\", \n",
    "      list(const))\n",
    "\n",
    "# remove constants\n",
    "df.drop(labels=const, axis=1, inplace=True) \n",
    "\n",
    "# test\n",
    "\n",
    "df_test.drop(labels=const, axis=1, inplace=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# !!!!"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ">>> Any column with negative values?: False\n"
     ]
    }
   ],
   "source": [
    "# Negative features == > meter a zero\n",
    "print(\">>> Any column with negative values?:\", \n",
    "      (df._get_numeric_data()<0).any().any())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Remove duplicates with different Response values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [],
   "source": [
    "df_x = df.drop(columns='Response')\n",
    "df_y = df.Response"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Year_Birth</th>\n",
       "      <th>Education</th>\n",
       "      <th>Marital_Status</th>\n",
       "      <th>Income</th>\n",
       "      <th>Kidhome</th>\n",
       "      <th>Teenhome</th>\n",
       "      <th>Dt_Customer</th>\n",
       "      <th>Recency</th>\n",
       "      <th>MntWines</th>\n",
       "      <th>MntFruits</th>\n",
       "      <th>...</th>\n",
       "      <th>NumWebPurchases</th>\n",
       "      <th>NumCatalogPurchases</th>\n",
       "      <th>NumStorePurchases</th>\n",
       "      <th>NumWebVisitsMonth</th>\n",
       "      <th>AcceptedCmp3</th>\n",
       "      <th>AcceptedCmp4</th>\n",
       "      <th>AcceptedCmp5</th>\n",
       "      <th>AcceptedCmp1</th>\n",
       "      <th>AcceptedCmp2</th>\n",
       "      <th>Complain</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ID</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>10617</th>\n",
       "      <td>1989</td>\n",
       "      <td>Master</td>\n",
       "      <td>Divorced</td>\n",
       "      <td>10979.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2014-05-22</td>\n",
       "      <td>34</td>\n",
       "      <td>8</td>\n",
       "      <td>4</td>\n",
       "      <td>...</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6864</th>\n",
       "      <td>1989</td>\n",
       "      <td>Master</td>\n",
       "      <td>Divorced</td>\n",
       "      <td>10979.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2014-05-22</td>\n",
       "      <td>34</td>\n",
       "      <td>8</td>\n",
       "      <td>4</td>\n",
       "      <td>...</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>234</th>\n",
       "      <td>1979</td>\n",
       "      <td>Graduation</td>\n",
       "      <td>Divorced</td>\n",
       "      <td>15287.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2012-10-10</td>\n",
       "      <td>60</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10264</th>\n",
       "      <td>1979</td>\n",
       "      <td>Graduation</td>\n",
       "      <td>Divorced</td>\n",
       "      <td>15287.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2012-10-10</td>\n",
       "      <td>60</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8420</th>\n",
       "      <td>1970</td>\n",
       "      <td>2n Cycle</td>\n",
       "      <td>Married</td>\n",
       "      <td>15315.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2013-08-03</td>\n",
       "      <td>27</td>\n",
       "      <td>7</td>\n",
       "      <td>4</td>\n",
       "      <td>...</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 25 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       Year_Birth   Education Marital_Status   Income  Kidhome  Teenhome  \\\n",
       "ID                                                                         \n",
       "10617        1989      Master       Divorced  10979.0        0         0   \n",
       "6864         1989      Master       Divorced  10979.0        0         0   \n",
       "234          1979  Graduation       Divorced  15287.0        1         0   \n",
       "10264        1979  Graduation       Divorced  15287.0        1         0   \n",
       "8420         1970    2n Cycle        Married  15315.0        0         0   \n",
       "\n",
       "      Dt_Customer  Recency  MntWines  MntFruits    ...     NumWebPurchases  \\\n",
       "ID                                                 ...                       \n",
       "10617  2014-05-22       34         8          4    ...                   3   \n",
       "6864   2014-05-22       34         8          4    ...                   3   \n",
       "234    2012-10-10       60         1          2    ...                   1   \n",
       "10264  2012-10-10       60         1          2    ...                   1   \n",
       "8420   2013-08-03       27         7          4    ...                   2   \n",
       "\n",
       "       NumCatalogPurchases  NumStorePurchases  NumWebVisitsMonth  \\\n",
       "ID                                                                 \n",
       "10617                    0                  3                  5   \n",
       "6864                     0                  3                  5   \n",
       "234                      1                  2                  7   \n",
       "10264                    1                  2                  7   \n",
       "8420                     0                  4                  5   \n",
       "\n",
       "       AcceptedCmp3  AcceptedCmp4  AcceptedCmp5  AcceptedCmp1  AcceptedCmp2  \\\n",
       "ID                                                                            \n",
       "10617             0             0             0             0             0   \n",
       "6864              0             0             0             0             0   \n",
       "234               1             0             0             0             0   \n",
       "10264             1             0             0             0             0   \n",
       "8420              0             0             0             0             0   \n",
       "\n",
       "       Complain  \n",
       "ID               \n",
       "10617         0  \n",
       "6864          0  \n",
       "234           0  \n",
       "10264         0  \n",
       "8420          0  \n",
       "\n",
       "[5 rows x 25 columns]"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_x[df_x.duplicated(keep=False)].sort_values(by='Income').head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Duplicate observations with different target values: 20\n"
     ]
    }
   ],
   "source": [
    "print('Duplicate observations with different target values:',len(df_x[df_x.duplicated(keep=False)])-len(df[df.duplicated(keep=False)]))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [],
   "source": [
    "duplicates_no_target = list(df_x[df_x.duplicated(keep=False)].index)\n",
    "duplicates_target = list(df[df.duplicated(keep=False)].index.values)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "20"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "idx_remove = list(set(duplicates_no_target) - set(duplicates_target))\n",
    "len(idx_remove)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = df[~df.index.isin(idx_remove)]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Correlation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [],
   "source": [
    "target = \"Response\"\n",
    "df[target]=df[target].astype('object')\n",
    "feature_list = df.select_dtypes(include=[\"int64\", \"Float64\"]).columns.values\n",
    "feature_list = [x for x in feature_list if not x.startswith((\"Year_B\",\"AcceptedCmp\"))]\n",
    "feature_list.append(target)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x720 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "cmap = sns.diverging_palette(20, 220, sep = 20, as_cmap=True)\n",
    "\n",
    "\n",
    "corr = df[feature_list].corr()\n",
    "\n",
    "mask = np.zeros_like(corr)\n",
    "mask[np.triu_indices_from(mask)] = True\n",
    "with sns.axes_style(\"white\"):\n",
    "    plt.figure(figsize = (15,10))\n",
    "    sns.heatmap(corr, \n",
    "            xticklabels=corr.columns.values,\n",
    "            yticklabels=corr.columns.values,\n",
    "            linewidths=0, annot= True,mask=mask,square=False, cmap = cmap)\n",
    "plt.title(\"Correlations\", loc = \"left\", fontweight = \"bold\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [],
   "source": [
    "df.to_excel(\"df_01.xlsx\")\n",
    "df_test.to_excel('df_test_01.xlsx')"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
